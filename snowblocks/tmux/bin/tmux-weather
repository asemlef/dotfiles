#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# variables
city_id="5809844"   # Seattle
api_key="6fbde35bc10b3a1e3e3c60c42c82176b"
url="http://api.openweathermap.org/data/2.5/weather?APPID=$api_key&id=$city_id&units=imperial"
cache_file="$HOME/.tmux/.weather_cache"
cache_time=10   # in minutes

# fetch data from API
if [[ -f $cache_file ]]; then
    curtime=$(date +%s)
    file_curtime=$(date +%s -r "$cache_file")
    roundedtime=$(($curtime - ($curtime % ($cache_time * 60))))
    file_roundedtime=$(($file_curtime - ($file_curtime % ($cache_time * 60))))
    if (( $roundedtime == $file_roundedtime )); then
        weather_data=$(cat $cache_file)
    else
        weather_data=$(curl --silent $url)
        echo $weather_data > $cache_file
  	fi
else
    weather_data=$(curl --silent $url)
    echo $weather_data > $cache_file
fi

# parse temperature and wind speed
weather_temperature=$(echo $weather_data | python -c "import sys, json; print json.load(sys.stdin)['main']['temp']" | cut -d . -f 1)
weather_wind_speed=$(echo $weather_data | python -c "import sys, json; print json.load(sys.stdin)['wind']['speed']" | cut -d . -f 1)

# parse weather conditions for best category to use
weather_con_highest=0
weather_con_len=$(($(echo $weather_data | python -c "import sys, json; print len(json.load(sys.stdin)['weather'])") - 1 ))
for i in $(seq 0 $weather_con_len); do
    weather_con_id=$(echo $weather_data | python -c "import sys, json; print json.load(sys.stdin)['weather'][$i]['id']")
    weather_con_icon=$(echo $weather_data | python -c "import sys, json; print json.load(sys.stdin)['weather'][$i]['icon']")
    # extreme weather (tornado, hurricane, etc)
    if [[ $weather_con_id =~ ^9[0-9][0-9]$ ]]; then
        if [[ $weather_con_highest -lt 8 ]]; then
            weather_icon=''
            weather_color='colour160'
            weather_con_highest=8
        fi
    # snow
    elif [[ $weather_con_id =~ ^6[0-9][0-9]$ ]]; then
        if [[ $weather_con_highest -lt 7 ]]; then
            weather_icon=''
            weather_color='colour7'
            weather_con_highest=7
        fi
    # thunderstorm
    elif [[ $weather_con_id =~ ^2[0-9][0-9]$ ]]; then
        if [[ $weather_con_highest -lt 6 ]]; then
            weather_icon=''
            weather_color='colour67'
            weather_con_highest=6
        fi
    # rain
    elif [[ $weather_con_id =~ ^5[0-9][1-9]$ ]]; then
        if [[ $weather_con_highest -lt 5 ]]; then
            weather_icon=''
            weather_color='colour67'
            weather_con_highest=5
        fi
    # drizzle
    elif [[ $weather_con_id =~ ^3[0-9][0-9]$ ]] || [[ $weather_con_id == 500 ]]; then
        if [[ $weather_con_highest -lt 4 ]]; then
            weather_icon=''
            weather_color='colour75'
            weather_con_highest=4
        fi
    # fog, mist, smoke, ash, etc
    elif [[ $weather_con_id =~ ^7[0-9][0-9]$ ]]; then
        if [[ $weather_con_highest -lt 3 ]]; then
            weather_icon='░'
            weather_color='colour144'
            weather_con_highest=3
        fi
    # clouds
    elif [[ $weather_con_id =~ ^80[1-9]$ ]]; then
        if [[ $weather_con_highest -lt 2 ]]; then
            weather_icon=''
            weather_color='colour110'
            weather_con_highest=2
        fi
    # clear
    elif [[ $weather_con_id == 800 ]]; then
        if [[ $weather_con_highest -lt 1 ]]; then
            if [[ $weather_con_icon = *'d' ]]; then
                weather_icon=''
                weather_color='colour172'
            elif [[ $weather_con_icon = *'n' ]]; then
                weather_icon=''
                weather_color='colour67'
            else
                weather_icon='C'
                weather_color='colour160'
            fi
            weather_con_highest=1
        fi
    # catchall for unexpected state
    else
        weather_icon='?'
        weather_color='colour160'
    fi
done

# print weather info formatted for tmux
echo "#[fg=colour14]${weather_temperature}°F #[fg=${weather_color}]${weather_icon}  #[fg=colour14]${weather_wind_speed}#[fg=default] "
